{
  "Name": "TicketStatusReport",
  "Description": "Provides a JSON output, counting the number of tickets in each status.  Parameters are used to limit the results to a specific range of values",
  "HttpMethod": "GET",
  "IsEnabled": true,
  "OrderIndex": 0,
  "CrossDomainPolicy": "Public",
  "Input": [
    {
      "Name": "minCount",
      "IsDeleted": false,
      "IsEnabled": true,
      "OrderIndex": 0,
      "Description": "The minimum number of tickets for each status",
      "Parameters": {
        "Value": ""
      },
      "InputTypeStr": "number",
      "Validations": [
        {
          "Data": "{\"Message\":\"Invalid number\"}",
          "Type": "default-integer",
          "IsDeleted": false,
          "IsEnabled": false,
          "OrderIndex": 0,
          "Metadata": {}
        }
      ]
    },
    {
      "Name": "maxCount",
      "IsDeleted": false,
      "IsEnabled": true,
      "OrderIndex": 1,
      "Description": "The maximum number of tickets for each status",
      "Parameters": {
        "Value": ""
      },
      "InputTypeStr": "number",
      "Validations": [
        {
          "Data": "{\"Message\":\"Invalid number\"}",
          "Type": "default-integer",
          "IsDeleted": false,
          "IsEnabled": false,
          "OrderIndex": 0,
          "Metadata": {}
        }
      ]
    }
  ],
  "Actions": [
    {
      "Description": "Use SQL to count the number of tickets in each status",
      "ActionType": "LoadEntitiesFromSql",
      "OrderIndex": 0,
      "Parameters": {
        "ConnectionString": "",
        "SqlQuery": "SELECT S.name as Status, count(s.id) as Count FROM app.ticket t\nINNER JOIN app.status s ON s.id = t.status\nGROUP BY s.Name\nHAVING count(s.id) >= @minCount AND count(s.id)  <= @maxCount",
        "BindTokens": [
          {
            "value": "[minCount]",
            "name": "minCount"
          },
          {
            "value": "[maxCount]",
            "name": "maxCount"
          }
        ],
        "EntityName": "Data",
        "ClearBeforeLoad": "",
        "EntityProps": "",
        "OnError": []
      },
      "IsEnabled": true,
      "ExecutionType": "OnExecute",
      "Metadata": {}
    },
    {
      "Description": "Send the data as the endpoint output",
      "ActionType": "JsonEntityList",
      "OrderIndex": 1,
      "Parameters": {
        "EntityName": "Data",
        "HttpCode": "200 OK",
        "Criteria": "",
        "Headers": "",
        "AllowJsonp": ""
      },
      "IsEnabled": true,
      "ExecutionType": "OnExecute",
      "Metadata": {}
    }
  ],
  "OnErrorActions": []
}